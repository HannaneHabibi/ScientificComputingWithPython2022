# -*- coding: utf-8 -*-
"""ScientificcomputationEx09.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qf2UYfpp9j3uppoRH_3r5AI3C1PyFr0o
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
from scipy import optimize
from matplotlib import cm
import math
from pylab import imshow
from scipy.integrate import odeint
from matplotlib.colors import LogNorm
from scipy import fftpack
import pandas as pd
import datetime

# %matplotlib inline

"""Exercise 2"""

from scipy.integrate import odeint
q = 2.0
d = 1.5
w = 0.65

def equation(y,time,q,d,w):
    theta,omega=y
    return (omega,((-1)*(1/q))*omega+np.sin(theta)+d*np.cos(w*time))

time=np.linspace(0,199,200)
y1 = odeint(equation,y0=(0,0),t=time,args=(q,d,w))

fig = plt.figure(figsize=(12,10))
ax0 = fig.add_subplot()
ax0 = plt.plot(time,y1[:,1])
ax0 = plt.plot(time,y1[:,0],color = 'orange')
ax0 = plt.xlabel('time linspace 0-199')
ax0 = plt.grid()
ax0 = plt.show()

time=np.linspace(0,80,200)
y2 = odeint(equation,y0=(0,0),t=time,args=(q,d,w))
fig = plt.figure(figsize=(12,10))
ax1 = fig.add_subplot()
ax1 = plt.plot(time,y2[:,1])
ax1 = plt.plot(time,y2[:,0],color = 'orange')
ax1 = plt.xlabel('time linspace 0-80')
ax1 = plt.grid()
ax1 = plt.show()

time=np.linspace(0,30,200)
y3 = odeint(equation,y0=(0,0),t=time,args=(q,d,w))
ax2 = plt.figure(figsize=(12,10))
ax2 = fig.add_subplot()
ax2 = plt.plot(time,y3[:,1],)
ax2 = plt.plot(time,y3[:,0], color ='orange')
ax2 = plt.xlabel('time linspace 0-30')
ax2 = plt.grid()
ax2 = plt.show()

time=np.linspace(0,10,200)
y4 = odeint(equation,y0=(0,0),t=time,args=(q,d,w))
ax3 = plt.figure(figsize=(10,10))
ax3 = fig.add_subplot()
ax3 = plt.plot(time,y4[:,1])
ax3 = plt.plot(time,y4[:,0],color = "orange")
ax3 = plt.xlabel('time linspace 0-10')
ax3 = plt.grid()
ax3 = plt.show()

"""Exercise 3"""

#!wget https://www.dropbox.com/s/ebe1cnyd2gm836a/populations.txt -P data/

data = np.loadtxt('data/populations.txt')
year, hares, lynxes, carrots = data.T

plt.axes([0.2, 0.1, 0.5, 0.8]) 
plt.plot(year, hares, year, lynxes) 
plt.legend(('Hare', 'Lynx'), loc=(1.05, 0.5))

fig, (ax1, ax2) = plt.subplots(nrows=1, ncols=2, figsize=(10, 4))
lynx_fft = fftpack.fft(lynxes)
l_psd = np.abs(lynx_fft) ** 2
l_fftfreq = fftpack.fftfreq(len(l_psd))
i = l_fftfreq > 0
ax1.plot(l_fftfreq[i], l_psd[i])
ax1.set_xlabel('Frequency ')
ax1.set_ylabel('Power')
ax1.set_yscale('log')

hare_fft = fftpack.fft(hares)
h_psd = np.abs(lynx_fft) ** 2
h_fftfreq = fftpack.fftfreq(len(h_psd))
i = h_fftfreq > 0
ax2.plot(h_fftfreq[i], h_psd[i], color = 'orange')
ax2.set_xlabel('Frequency ')
ax2.set_ylabel('Power')
ax2.set_yscale('log')

print(" lynx and hare populations evolve --> 1/0.1 = 10 years")